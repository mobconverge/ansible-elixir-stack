---
- when: deploy_type == "restart"
  name: stop app
  monit: name="{{ app_name }}" state=stopped
  become: yes
  ignore_errors: true


- when: deploy_type == "restart"
  name: delete release
  shell: "mix release.clean" 
  args:
    chdir: "{{ project_path }}"
  become: yes
  become_user: "{{ deployer }}"
  become_flags: "-i"


- name: "compile and release"
  shell: "SERVER=1 mix do compile, release"
  args:
    chdir: "{{ project_path }}"
  become: yes
  become_user: "{{ deployer }}"
  become_flags: "-i"
  environment:
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"


- when: deploy_type == "restart"
  name: start app
  monit: name="{{ app_name }}" state=started
  register: result
  ignore_errors: true
  become: yes
  until: result.failed == false
  retries: 5
  delay: 2


- when: deploy_type == "upgrade"
  name: get app version
  shell: "mix run -e 'IO.puts Mix.Project.config[:version]'" 
  args:
    chdir: "{{ project_path }}"
  become: yes
  become_user: "{{ deployer }}"
  become_flags: "-i"
  register: app_version


- when: deploy_type == "upgrade"
  name: set upgrade command
  set_fact: upgrade_command='rel/{{ app_name }}/bin/{{ app_name }} upgrade "{{ app_version.stdout }}"'


- when: deploy_type == "upgrade"
  name: upgrade app
  shell: "{{ upgrade_command }}" 
  args:
    chdir: "{{ project_path }}"
  become: yes
  become_user: "{{ deployer }}"
  become_flags: "-i"
  environment:
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"
